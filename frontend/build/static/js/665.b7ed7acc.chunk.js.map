{"version":3,"file":"static/js/665.b7ed7acc.chunk.js","mappings":"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","sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-transition-group/esm/CSSTransition.js"],"sourcesContent":["import React from 'react';\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\n\nconst Modal = props => {\n  \n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;"],"names":["props","className","style","children","ReactDOM","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","onClear","error","Button","Col","React","ref","as","bsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","Component","_jsx","length","displayName","Row","decoratedBsPrefix","sizePrefix","cols","removeClass","node","split","c","removeOneClass","_React$Component","_this","_len","arguments","args","Array","_key","call","apply","this","concat","appliedClasses","appear","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","onEntering","_this$resolveArgument2","type","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","current","getClassNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","prototype","phase","forceReflow","addOneClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","_objectWithoutPropertiesLoose","Transition","_extends","defaultProps","propTypes"],"sourceRoot":""}