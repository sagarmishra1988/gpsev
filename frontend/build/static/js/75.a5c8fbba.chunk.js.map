{"version":3,"file":"static/js/75.a5c8fbba.chunk.js","mappings":"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","sources":["products/component/customerorder/Customerorderlist.js","products/component/customerorder/Customerorder.js","products/pages/Customerorderpage.js"],"sourcesContent":["import React from 'react'\r\nimport './Customerorderlist.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nconst Customerorderlist = (props) => {\r\n  \r\n  // const b= Date();\r\n// const a= Date.now()  \r\n  // const a = new Date()\r\n  // const b= a.toString()\r\n  // const b =a.getDate()+\"/\"+a.getMonth()+1+\"/\"+a.getFullYear()\r\n  \r\n  return (\r\n    <>\r\n       \r\n       <Container fluid>\r\n      <Row  style={{border:\"1px solid black\"}}>\r\n        <Col style={{border:\"1px solid black\"}}><img style={{width:\"70%\", height:\"50px\"}} src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt=\"\" /></Col>\r\n        <Col style={{border:\"1px solid black\", fontSize:\"10px\", textAlign:\"center\"}}>{props.title}</Col>\r\n        <Col style={{border:\"1px solid black\", fontSize:\"10px\", textAlign:\"center\"}}>{props.description}</Col>\r\n        <Col style={{border:\"1px solid black\", fontSize:\"10px\", textAlign:\"center\"}}>{props.price}</Col>\r\n        <Col style={{border:\"1px solid black\", fontSize:\"10px\", textAlign:\"center\"}}>{props.amount}</Col>        \r\n        <Col style={{border:\"1px solid black\", fontSize:\"10px\", textAlign:\"center\"}}><NavLink to={`/${props.id}/updatecustomerorder`}>✒️</NavLink></Col>\r\n        <Col style={{border:\"1px solid black\", fontSize:\"10px\", textAlign:\"center\"}}>{props.time}</Col>\r\n      </Row>\r\n    </Container>\r\n     \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Customerorderlist\r\n","import React, {  useEffect, useState } from 'react'\r\nimport {  useParams } from 'react-router-dom';\r\nimport Card from '../../../shared/components/UIElements/Card';\r\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\r\nimport Customerorderlist from './Customerorderlist';\r\nimport './Customerorderlist.css'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst Selleruploadedproduct = () => {\r\n\r\n    const[loadedUsers, setLoadedUsers]= useState([])\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    // const auth= useContext(AuthContext)\r\n  // const navigate= useNavigate()\r\n  const customerId= useParams().cid;\r\n\r\n    useEffect(() => {\r\n        const sendrequest = async () => {\r\n          // setIsLoading(true);       \r\n          try {\r\n            const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL +`/orders/customer/${customerId}`);\r\n      \r\n           setLoadedUsers(responseData.orders);\r\n            // auth.customerlogin(responseData.customer.id)\r\n            console.log(responseData.orders)\r\n          } catch (err) {}\r\n        };\r\n        sendrequest();\r\n      }, [sendRequest, customerId]);\r\n\r\n\r\n      if (loadedUsers.length === 0) {\r\n        return (\r\n          <div className=\"center\">\r\n            <Card>\r\n              <h2 style={{color:\"white\", textDecoration:\"none\"}}>No Orders Found.</h2>\r\n            </Card>\r\n          </div>\r\n        );\r\n      }\r\n         \r\n\r\n  return (\r\n    <>\r\n        \r\n    <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n        <Container fluid>\r\n      <Row style={{border:\"1px solid black\"}}>\r\n        <Col style={{border:\"1px solid black\", fontSize:\"8px\", fontWeight:\"bold\", textAlign:\"center\"}}>IMAGE</Col>\r\n        <Col style={{border:\"1px solid black\", fontSize:\"8px\", fontWeight:\"bold\", textAlign:\"center\"}}>TITLE</Col>\r\n        <Col style={{border:\"1px solid black\", fontSize:\"8px\", fontWeight:\"bold\", textAlign:\"center\"}}>DESCRIPTION</Col>\r\n        <Col style={{border:\"1px solid black\", fontSize:\"8px\", fontWeight:\"bold\", textAlign:\"center\"}}>PRICE</Col>\r\n        <Col style={{border:\"1px solid black\", fontSize:\"8px\", fontWeight:\"bold\", textAlign:\"center\"}}>QUANTITY</Col>\r\n        <Col style={{border:\"1px solid black\", fontSize:\"8px\", fontWeight:\"bold\", textAlign:\"center\"}}>EDIT</Col>\r\n        <Col style={{border:\"1px solid black\", fontSize:\"8px\", fontWeight:\"bold\", textAlign:\"center\"}}>PURCHASE DATE</Col>\r\n      </Row>\r\n    </Container>\r\n\r\n{\r\n  loadedUsers.map((p)=>{\r\n    return <Customerorderlist\r\n    key={p.id}\r\n    id={p.id}\r\n    name={p.name}\r\n      title = {p.title}\r\n      description= {p.description}\r\n      image={p.image}\r\n      amount={p.amount}\r\n      creator={p.creator}\r\n      price={p.price}\r\n      time={p.time}\r\n      quantity={p.quantity}\r\n    />\r\n  }\r\n  )\r\n}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Selleruploadedproduct\r\n","import React from 'react'\r\nimport Customerorder from '../component/customerorder/Customerorder'\r\n\r\nconst Customerorderpage = () => {\r\n\r\n  return (\r\n    <>\r\n    <div style={{marginTop:\"100px\"}}>\r\n        <Customerorder/>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Customerorderpage\r\n"],"names":["props","Container","fluid","Row","style","border","Col","width","height","src","process","image","alt","fontSize","textAlign","title","description","price","amount","to","id","time","useState","loadedUsers","setLoadedUsers","useHttpClient","isLoading","error","sendRequest","clearError","customerId","useParams","cid","useEffect","sendrequest","responseData","orders","console","log","length","className","Card","color","textDecoration","ErrorModal","onClear","LoadingSpinner","asOverlay","fontWeight","map","p","name","creator","quantity","marginTop","Customerorder"],"sourceRoot":""}