{"version":3,"file":"static/js/961.64c67069.chunk.js","mappings":"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","sources":["products/component/Updatecustomerorder/Forminput.jsx","products/pages/Updatecustomerorder.js","shared/components/FormElements/Input.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/hooks/form-custom-hooks.jsx","../node_modules/react-transition-group/esm/CSSTransition.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport Input from '../../../shared/components/FormElements/Input'\r\nimport Button from '../../../shared/components/FormElements/Button'\r\nimport './Forminput.css'\r\nimport { useRef } from 'react'\r\nimport useCustomhooks from '../../../shared/hooks/form-custom-hooks'\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook'\r\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner'\r\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n// import { AuthContext } from '../../../shared/context/auth-context'\r\nimport { useState } from 'react'\r\nimport { useContext } from 'react'\r\nimport { AuthContext } from '../../../shared/context/auth-context'\r\n// import Card from '../../../shared/components/UIElements/Card'\r\n\r\nconst Forminput = () => {  \r\n  const[loadedUsers, setLoadedUsers]= useState([])\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  // const auth= useContext(AuthContext)\r\nconst navigate= useNavigate()\r\nconst orderId= useParams().oid;\r\nconst auth= useContext(AuthContext);\r\n\r\nconst{  \r\n  value:quantityinput,\r\n  entervalueisvalid:enterquantityisvalid,\r\n  haserror:quantityinputisvalid,\r\n  valuechangehandler:quantitychangehandler,\r\n  valueblurhandler:quantityblurhandler,  \r\n  reset:resetquantity\r\n} = useCustomhooks(val=>val.trim() !==\"\")\r\n\r\nconst quantityref= useRef()\r\n\r\nlet formisvalid= false\r\nif(enterquantityisvalid){\r\n  formisvalid=true\r\n}\r\n\r\n\r\nuseEffect(() => {\r\n  const sendrequest = async () => {\r\n    // setIsLoading(true);       \r\n    try {\r\n     const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL +`/orders/${orderId}`);\r\n\r\n     setLoadedUsers(responseData.order);\r\n      // auth.customerlogin(responseData.customer.id)\r\n      console.log(responseData.order)\r\n    } catch (err) {}\r\n  };\r\n  sendrequest();\r\n}, [sendRequest, orderId]);\r\n\r\n\r\nconst submithandler= async(event)=>{\r\n  event.preventDefault();\r\n    \r\n\r\nif(!enterquantityisvalid){\r\n  return;  \r\n}\r\nresetquantity()\r\n\r\n\r\ntry {\r\n  await sendRequest(\r\n    process.env.REACT_APP_BACKEND_URL +`/orders/${orderId}`,\r\n    'PATCH',\r\n    JSON.stringify({\r\n      amount:quantityinput\r\n    }),\r\n    {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  );\r\n  // auth.login(responseData.user.id);\r\n  navigate(`/${auth.customerId}/customerorder`)\r\n} catch (err) {}\r\n}\r\n\r\n\r\nconst deleteorder=async()=>{\r\n  try {\r\n    await sendRequest(\r\n      process.env.REACT_APP_BACKEND_URL +`/orders/${orderId}`,\r\n      'DELETE');\r\n    // auth.delet()\r\n    \r\n  navigate(`/${auth.customerId}/customerorder`)\r\n  } catch (err) {}\r\n}\r\n\r\n  const quantityinputonclasses= quantityinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  \r\n  return (\r\n    <>    \r\n    \r\n    <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n\r\n        <h2>Upload New Products</h2>\r\n\r\n\r\n    <div className='form_input_div'>\r\n    <form onSubmit={submithandler}>\r\n\r\n<div className={quantityinputonclasses}>\r\n      <Input\r\n      id=\"QUANTITY\"\r\n      type='number' \r\n        ref={quantityref}\r\n        onChange={quantitychangehandler}\r\n        onBlur={quantityblurhandler}\r\n        value={quantityinput || loadedUsers.amount}\r\n      />\r\n      {quantityinputisvalid && <p>enter valid quantity</p>}\r\n      </div>\r\n      <Button disabled={!formisvalid}>Update</Button>\r\n      {/* <Button to ='/sellerlogin'>Edit</Button> */}\r\n      <Button onClick ={deleteorder}>Delete</Button>\r\n    </form>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Forminput\r\n","import React from 'react'\r\nimport Forminput from '../component/Updatecustomerorder/Forminput'\r\n\r\nconst Updatecustomerorder = () => {\r\n  return (\r\n    <>    \r\n    <div style={{marginTop:\"100px\"}}>\r\n        <Forminput/>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Updatecustomerorder\r\n","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <>   \r\n    <label htmlFor={props.id}>{props.id}</label>\r\n    <input style={{width:\"100%\"}}\r\n    type={props.type} \r\n    id={props.id}\r\n    onChange={props.onChange}    \r\n    ref={props.ref}\r\n    onBlur={props.onBlur}     \r\n    value={props.value}\r\n    />\r\n      \r\n  \r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\n\nconst Modal = props => {\n  \n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","\r\n// practice1 \r\nimport { useReducer } from \"react\"\r\n// import { useState } from \"react\"\r\n\r\nconst initialstate={\r\nvalue:'',\r\nisTouched:false\r\n}\r\n\r\nconst reducerfunction=(state, action)=>{\r\n    if(action.type=== 'input'){\r\n     return {value: action.value, isTouched: state.isTouched}\r\n    }\r\n    if(action.type=== 'blur'){\r\n    return  {isTouched:true, value:state.value}\r\n    }\r\n    if(action.type=== 'reset'){\r\n      return{ isTouched:false, value:''}\r\n    }\r\n    return reducerfunction;\r\n  }\r\n  \r\nconst useCustomhooks=(validatevalue)=>{\r\n  \r\n  const[inputstate, dispatch]= useReducer(reducerfunction, initialstate)\r\n  // const[valueinput, setvalueinput]= useState('')\r\n  // const[valueistouched, setvalueistouched]= useState(false)\r\n  const entervalueisvalid = validatevalue(inputstate.value)\r\n  const haserror= !entervalueisvalid && inputstate.isTouched\r\n\r\n\r\n  const valuechangehandler=event=>{\r\n    // setvalueinput(event.target.value)\r\n    dispatch({type:'input', value:event.target.value})\r\n  }\r\n  \r\n  const valueblurhandler=()=>{\r\n    // setvalueistouched(true)\r\n    dispatch({type:'blur'})\r\n    }\r\n    \r\n    const reset=()=>{\r\n      // setvalueinput('')\r\n      // setvalueistouched(false)\r\n      dispatch({type:\"reset\"})\r\n  }\r\n  return{\r\n   value: inputstate.value,\r\n    entervalueisvalid,\r\n    haserror,\r\n    valuechangehandler,\r\n    valueblurhandler,\r\n    reset\r\n  }\r\n}\r\nexport default useCustomhooks","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;"],"names":["useState","loadedUsers","setLoadedUsers","useHttpClient","isLoading","error","sendRequest","clearError","navigate","useNavigate","orderId","useParams","oid","auth","useContext","AuthContext","useCustomhooks","val","trim","quantityinput","value","enterquantityisvalid","entervalueisvalid","quantityinputisvalid","haserror","quantitychangehandler","valuechangehandler","quantityblurhandler","valueblurhandler","resetquantity","reset","quantityref","useRef","formisvalid","useEffect","sendrequest","process","responseData","order","console","log","submithandler","event","preventDefault","JSON","stringify","amount","customerId","deleteorder","quantityinputonclasses","ErrorModal","onClear","LoadingSpinner","asOverlay","className","onSubmit","Input","id","type","ref","onChange","onBlur","Button","disabled","onClick","style","marginTop","props","htmlFor","width","ReactDOM","document","getElementById","ModalOverlay","content","headerClass","header","contentClass","children","footerClass","footer","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","initialstate","isTouched","reducerfunction","state","action","validatevalue","useReducer","inputstate","dispatch","target","removeClass","node","classes","split","forEach","c","removeOneClass","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","appliedClasses","appear","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","onEntering","_this$resolveArgument2","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","current","getClassNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","prototype","phase","forceReflow","addOneClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","_objectWithoutPropertiesLoose","React","Transition","_extends","defaultProps","propTypes"],"sourceRoot":""}